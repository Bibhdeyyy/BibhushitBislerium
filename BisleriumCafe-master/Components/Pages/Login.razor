@page "/login"


@using BisleriumCafe.Model
@using BisleriumCafe.Services
@using System.ComponentModel.DataAnnotations

@inject NavigationManager NavManager
<style>

    .login-container {
        margin: auto;
        margin-top: 15%;
        max-height: 400px;
        max-width: 300px;
        box-shadow: rgba(50, 50, 93, 0.25) 0px 13px 27px -5px, rgba(0, 0, 0, 0.3) 0px 8px 16px -8px;
        padding: 2rem;
        text-align: center;
        border-radius: 1rem;
        background: white;
    }

    h1 {
        margin-top: 0;
    }

    .form-row {
        position: relative;
        margin-bottom: 0.5rem;
    }

    .form-input {
        box-sizing: border-box;
        padding: 2rem 1rem 0.5rem 0.5rem;
        border: 0;
        border-bottom: 1px solid lightgrey;
        width: 100%;
    }

        .form-input::placeholder {
            color: transparent;
            display: none;
        }

        .form-input:focus {
            outline: none;
            border-bottom: 2px solid #19c7d9;
        }

    .form-label {
        position: absolute;
        color: gray;
        bottom: 0.5rem;
        left: 0;
        transition: opacity .1s ease-in-out, transform .1s ease-in-out;
    }

    .form-input:focus ~ .form-label, .form-input:not(:placeholder-shown) ~ .form-label {
        opacity: .65;
        transform: scale(.85) translateY(-1.3rem);
    }

    .forgot-pwd {
        float: right;
        text-decoration: none;
        color: #19c7d9;
        margin-top: 1rem;
    }

    .submit-btn {
        margin-top: 2rem;
        width: 100%;
        font-size: 1.2rem;
        border-radius: 2rem;
        padding: 0.5rem 2rem;
        background: #19c7d9;
        color: white;
        border: 0;
    }

        .submit-btn:hover {
            cursor: pointer;
            background: #0ed8ee;
            text-decoration: none;
        }

    .sign-up-text {
        color: gray;
        display: block;
        margin-top: 2rem;
    }

        .sign-up-text > a {
            text-decoration: none;
            color: #19c7d9;
        }
</style>
<div>
    <div class="login-container">
        <form @onsubmit="LoginHandler">
            <h2>Bislerium Cafe</h2><br>

            <div class="form-row">
                <input type="text" id="username" class="form-input" @bind="_username" placeholder="Username" />
                <label for="floatingInput" class="form-label">Username</label>
            </div>

            <div class="form-row">
                <input type="password" id="password" class="form-input" @bind="_password" placeholder="Password" />
                <label for="floatingInput" class="form-label">Password</label>
            </div>
            @if (!string.IsNullOrEmpty(_errorMessage))
            {
                <p style="color:red">@_errorMessage</p>
            }
            <button type="submit" class="submit-btn">Sign in</button>
        </form>
    </div>
</div>



@code {


    [CascadingParameter]
    private GlobalState _globalState { get; set; }
    private bool _showDefaultCredentials { get; set; }
    private string _username { get; set; }
    private string _password { get; set; }
    private string _errorMessage = "";

    protected override void OnInitialized()
    {
        try
        {
            var user = UsersService.Login(UsersService.SeedUsername, UsersService.SeedPassword);
            _showDefaultCredentials = user.HasInitialPassword;
        }
        catch { }

        _globalState.CurrentUser = null;
        _errorMessage = "";
    }

    private void LoginHandler()
    {
        try
        {
            _errorMessage = "";
            _globalState.CurrentUser = UsersService.Login(_username, _password);
            if (_globalState.CurrentUser != null)
            {
                NavManager.NavigateTo("/order");
            }
       
        }
        catch (Exception e)
        {
            _errorMessage = e.Message;
            Console.WriteLine(e);
        }
    }
}
